{
  "info": {
    "name": "Email Processor Workshop v2 - Complete Collection",
    "description": "Colecci√≥n completa de endpoints para el Email Processor Workshop v2 - OpenAI API Practitioner.\n\nüéì **Workshop Overview:**\n- **Rama 1**: Basic Setup - Configuraci√≥n b√°sica con OpenAI SDK\n- **Rama 2**: RAG Embedding - Implementaci√≥n RAG con base de datos de emails\n- **Rama 3**: Fine-tuning - Servicio LM con modelos configurables\n- **Rama 4**: Email Processing - Pipeline completo de procesamiento\n- **Rama 5**: Enhanced RAG - RAG mejorado con Function Calling\n- **Rama 6**: API Moderation - Moderaci√≥n de contenido y seguridad\n\nüìö **Instrucciones de Uso:**\n1. Importa esta colecci√≥n en Postman\n2. Configura las variables de entorno (baseUrl, port)\n3. Ejecuta los requests seg√∫n la rama/funcionalidad que est√©s probando\n4. Revisa las descripciones de cada endpoint para entender su prop√≥sito\n\nüîß **Variables de Entorno:**\n- `baseUrl`: http://localhost\n- `port`: 3000\n\nüöÄ **Servidor:**\n```bash\nnpm run dev\n```",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": {
      "major": 2,
      "minor": 0,
      "patch": 0
    }
  },
  "item": [
    {
      "name": "üè† Sistema Base",
      "description": "Endpoints generales del sistema - Disponibles en todas las ramas",
      "item": [
        {
          "name": "Welcome - Informaci√≥n del Workshop",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}:{{port}}/",
              "host": [
                "{{baseUrl}}"
              ],
              "port": "{{port}}",
              "path": [
                ""
              ]
            },
            "description": "üéì **Endpoint de Bienvenida**\n\n**Prop√≥sito:** Informaci√≥n general del workshop, rama actual y endpoints disponibles.\n\n**Rama:** Todas (1-6)\n\n**Respuesta esperada:**\n- Descripci√≥n del workshop y rama actual\n- Lista completa de endpoints disponibles\n- Funcionalidades de la rama actual\n- Pr√≥ximos pasos en el aprendizaje\n\n**Uso:** Punto de inicio para conocer el estado actual del workshop."
          },
          "response": []
        },
        {
          "name": "Health Check - Estado del Servidor",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}:{{port}}/health",
              "host": [
                "{{baseUrl}}"
              ],
              "port": "{{port}}",
              "path": [
                "health"
              ]
            },
            "description": "ü©∫ **Health Check**\n\n**Prop√≥sito:** Verificar que el servidor est√© funcionando correctamente.\n\n**Rama:** Todas (1-6)\n\n**Respuesta esperada:**\n- Status: healthy\n- Timestamp actual\n- Versi√≥n del sistema\n- Entorno de ejecuci√≥n\n\n**Uso:** Diagn√≥stico r√°pido del estado del servidor."
          },
          "response": []
        },
        {
          "name": "Documentaci√≥n - Gu√≠a Completa",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}:{{port}}/docs",
              "host": [
                "{{baseUrl}}"
              ],
              "port": "{{port}}",
              "path": [
                "docs"
              ]
            },
            "description": "üìö **Documentaci√≥n Completa**\n\n**Prop√≥sito:** Documentaci√≥n detallada del workshop, ramas y funcionalidades.\n\n**Rama:** Todas (1-6)\n\n**Respuesta incluye:**\n- Descripci√≥n completa de cada rama\n- Rutas disponibles por m√≥dulo\n- Categor√≠as de moderaci√≥n (rama 6)\n- Gu√≠a de implementaci√≥n\n\n**Uso:** Referencia t√©cnica completa del workshop."
          },
          "response": []
        }
      ]
    },
    {
      "name": "üî§ Rama 1: Basic Setup",
      "description": "Endpoints b√°sicos - Configuraci√≥n inicial con OpenAI SDK",
      "item": [
        {
          "name": "Test Basic Completion",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"model\": \"gpt-4o-mini\",\n  \"messages\": [\n    {\n      \"role\": \"system\",\n      \"content\": \"You are a helpful assistant for a financial email processing system.\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \"Explain what a financial email processor should do.\"\n    }\n  ],\n  \"max_tokens\": 200,\n  \"temperature\": 0.7\n}"
            },
            "url": {
              "raw": "{{baseUrl}}:{{port}}/completion",
              "host": [
                "{{baseUrl}}"
              ],
              "port": "{{port}}",
              "path": [
                "completion"
              ]
            },
            "description": "ü§ñ **Completion B√°sico**\n\n**Prop√≥sito:** Prueba b√°sica de integraci√≥n con OpenAI SDK.\n\n**Rama:** 1-initial-project\n\n**Datos de entrada:**\n- Model: gpt-4o-mini\n- System prompt para procesamiento de emails financieros\n- User query explicativa\n\n**Respuesta esperada:**\n- Explicaci√≥n detallada de un procesador de emails financieros\n- Demostraci√≥n de integraci√≥n OpenAI b√°sica\n\n**Uso:** Verificar conectividad y configuraci√≥n inicial."
          },
          "response": []
        },
        {
          "name": "Test Basic Query",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"How does the email processor work?\",\n  \"instructions\": [\n    \"Test basic system query\",\n    \"Send POST to /query or /basic\",\n    \"Expected: System explanation or basic processing info\"\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}:{{port}}/query",
              "host": [
                "{{baseUrl}}"
              ],
              "port": "{{port}}",
              "path": [
                "query"
              ]
            },
            "description": "‚ùì **Query B√°sico**\n\n**Prop√≥sito:** Consulta simple al sistema para entender funcionamiento.\n\n**Rama:** 1-initial-project\n\n**Datos de entrada:**\n- Query simple sobre el funcionamiento del sistema\n\n**Respuesta esperada:**\n- Explicaci√≥n del procesador de emails\n- Informaci√≥n b√°sica del sistema\n\n**Uso:** Interacci√≥n b√°sica con el sistema configurado."
          },
          "response": []
        }
      ]
    },
    {
      "name": "üîç Rama 2: RAG Embedding",
      "description": "Endpoints RAG - Retrieval Augmented Generation con base de datos de emails",
      "item": [
        {
          "name": "RAG Query - Consulta de Pol√≠ticas",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"What is the policy for international wire transfers?\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}:{{port}}/rag/query",
              "host": [
                "{{baseUrl}}"
              ],
              "port": "{{port}}",
              "path": [
                "rag",
                "query"
              ]
            },
            "description": "üîç **RAG Query - Pol√≠ticas Financieras**\n\n**Prop√≥sito:** Consultar la base de datos de emails usando RAG.\n\n**Rama:** 2-rag-embedding\n\n**Datos de entrada:**\n- Query en lenguaje natural sobre pol√≠ticas/emails\n\n**Ejemplos de consultas:**\n- \"¬øCu√°l es la pol√≠tica para transferencias internacionales?\"\n- \"¬øCu√°nto gast√© en Amazon el mes pasado?\"\n- \"¬øQu√© emails de Netflix tengo?\"\n\n**Respuesta esperada:**\n- Respuesta contextual basada en la base de datos\n- Pol√≠ticas relevantes encontradas\n- Tokens utilizados\n- Timestamp de procesamiento"
          },
          "response": []
        },
        {
          "name": "RAG Query - Consulta de Tarifas",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"¬øCu√°les son las tarifas para transferencias internacionales?\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}:{{port}}/rag/query",
              "host": [
                "{{baseUrl}}"
              ],
              "port": "{{port}}",
              "path": [
                "rag",
                "query"
              ]
            },
            "description": "üí∞ **RAG Query - Tarifas**\n\n**Prop√≥sito:** Consultar informaci√≥n espec√≠fica sobre tarifas y costos.\n\n**Rama:** 2-rag-embedding\n\n**Datos de entrada:**\n- Pregunta espec√≠fica sobre tarifas en espa√±ol\n\n**Casos de prueba:**\n- Tarifas internacionales\n- Comisiones bancarias\n- L√≠mites de transferencia\n- Pol√≠ticas de costos\n\n**Respuesta esperada:**\n- Informaci√≥n detallada sobre tarifas\n- Contexto de pol√≠ticas relevantes\n- Fuentes de informaci√≥n utilizadas"
          },
          "response": []
        },
        {
          "name": "RAG Query - Transferencias Regionales",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"¬øPuedo transferir dinero a Europa desde mi cuenta comercial?\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}:{{port}}/rag/query",
              "host": [
                "{{baseUrl}}"
              ],
              "port": "{{port}}",
              "path": [
                "rag",
                "query"
              ]
            },
            "description": "üåç **RAG Query - Transferencias Regionales**\n\n**Prop√≥sito:** Consultar pol√≠ticas espec√≠ficas de transferencias regionales.\n\n**Rama:** 2-rag-embedding\n\n**Datos de entrada:**\n- Consulta sobre transferencias a regi√≥n espec√≠fica\n- Tipo de cuenta (comercial/personal)\n\n**Casos de prueba:**\n- Transferencias a Europa, Asia, Am√©rica\n- Diferentes tipos de cuentas\n- Restricciones regionales\n- L√≠mites por zona geogr√°fica\n\n**Respuesta esperada:**\n- Pol√≠ticas espec√≠ficas por regi√≥n\n- L√≠mites y restricciones\n- Procedimientos requeridos"
          },
          "response": []
        },
        {
          "name": "Get All Emails/Policies",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}:{{port}}/rag/policies",
              "host": [
                "{{baseUrl}}"
              ],
              "port": "{{port}}",
              "path": [
                "rag",
                "policies"
              ]
            },
            "description": "üìã **Listar Todas las Pol√≠ticas/Emails**\n\n**Prop√≥sito:** Obtener lista completa de emails/pol√≠ticas en la base de datos.\n\n**Rama:** 2-rag-embedding (rama 5+ como /rag/emails)\n\n**Datos de entrada:** Ninguno (GET request)\n\n**Respuesta esperada:**\n- N√∫mero total de pol√≠ticas/emails\n- Lista con ID, t√≠tulo, categor√≠a\n- Longitud del contenido\n- Estado de embeddings\n\n**Uso:** Explorar contenido disponible en la base de datos vectorial."
          },
          "response": []
        },
        {
          "name": "RAG Statistics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}:{{port}}/rag/stats",
              "host": [
                "{{baseUrl}}"
              ],
              "port": "{{port}}",
              "path": [
                "rag",
                "stats"
              ]
            },
            "description": "üìä **Estad√≠sticas RAG**\n\n**Prop√≥sito:** Obtener estad√≠sticas del vector store y base de datos.\n\n**Rama:** 2-rag-embedding\n\n**Datos de entrada:** Ninguno (GET request)\n\n**Respuesta esperada:**\n- Total de pol√≠ticas/emails\n- Categor√≠as disponibles\n- Dimensi√≥n de embeddings\n- Longitud promedio de contenido\n- Modelo OpenAI utilizado\n\n**Uso:** Monitorear estado y configuraci√≥n del sistema RAG."
          },
          "response": []
        },
        {
          "name": "Voice to Text Query (Multipart)",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "audio",
                  "type": "file",
                  "src": [],
                  "description": "Audio file (MP3, WAV, M4A, FLAC) with question in Spanish"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}:{{port}}/rag/query-voice-to-text",
              "host": [
                "{{baseUrl}}"
              ],
              "port": "{{port}}",
              "path": [
                "rag",
                "query-voice-to-text"
              ]
            },
            "description": "üé§üî§ **Voice to Text + RAG**\n\n**Prop√≥sito:** Procesar audio, transcribir con Whisper, y ejecutar consulta RAG.\n\n**Rama:** 5-enhanced-rag (con Function Calling)\n\n**Datos de entrada:**\n- Archivo de audio (MP3, WAV, M4A, FLAC)\n- M√°ximo 25MB\n- Preferiblemente en espa√±ol\n\n**Ejemplos de preguntas de audio:**\n- \"¬øCu√°les son las tarifas para transferencias internacionales?\"\n- \"¬øPuedo transferir dinero a Europa desde mi cuenta comercial?\"\n- \"¬øCu√°l es el l√≠mite diario para transferencias electr√≥nicas?\"\n\n**Respuesta esperada:**\n- Transcripci√≥n del audio\n- Respuesta RAG basada en transcripci√≥n\n- Metadata de procesamiento\n- Tiempo de procesamiento\n\n**Proceso:**\n1. Subir audio ‚Üí Whisper transcription\n2. Transcripci√≥n ‚Üí RAG query\n3. Respuesta contextual"
          },
          "response": []
        },
        {
          "name": "Voice to Voice Query (Multipart)",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "audio",
                  "type": "file",
                  "src": [],
                  "description": "Audio file (MP3, WAV, M4A, FLAC) with question"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}:{{port}}/rag/query-voice-to-voice",
              "host": [
                "{{baseUrl}}"
              ],
              "port": "{{port}}",
              "path": [
                "rag",
                "query-voice-to-voice"
              ]
            },
            "description": "üé§üîä **Voice to Voice Complete**\n\n**Prop√≥sito:** Pipeline completo: Audio ‚Üí Texto ‚Üí RAG ‚Üí Audio response.\n\n**Rama:** 5-enhanced-rag (con Function Calling)\n\n**Datos de entrada:**\n- Archivo de audio con pregunta\n- Formatos: MP3, WAV, M4A, FLAC\n- M√°ximo 25MB\n\n**Respuesta esperada:**\n- **Archivo de audio MP3** con la respuesta\n- Headers con metadata:\n  * X-Transcribed-Query: Pregunta transcrita\n  * X-Response-Length: Longitud de respuesta\n  * X-Relevant-Policies: Pol√≠ticas relevantes\n  * X-Processing-Timestamp: Timestamp\n\n**Proceso completo:**\n1. Audio ‚Üí Whisper (transcripci√≥n)\n2. Texto ‚Üí RAG (consulta)\n3. Respuesta ‚Üí TTS (audio)\n4. Descarga archivo MP3\n\n**Uso:** Interfaz completamente vocal para consultas."
          },
          "response": []
        }
      ]
    },
    {
      "name": "üéØ Rama 3: Fine-tuning",
      "description": "Endpoints Fine-tuning - Clasificaci√≥n con LM Service y modelos configurables",
      "item": [
        {
          "name": "Classify Email - Base Model",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"emailSubject\": \"Payment Receipt - Amazon Purchase\",\n  \"emailBody\": \"Thank you for your purchase! Order #AMZ-789456123. Amount: $45.67. Your credit card ending in 4532 was charged on March 15, 2024.\",\n  \"sender\": \"auto-confirm@amazon.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}:{{port}}/fine-tuning/classify-base",
              "host": [
                "{{baseUrl}}"
              ],
              "port": "{{port}}",
              "path": [
                "fine-tuning",
                "classify-base"
              ]
            },
            "description": "üìä **Clasificaci√≥n - Modelo Base**\n\n**Prop√≥sito:** Clasificar email usando el modelo base configurado en LM Service.\n\n**Rama:** 3-fine-tuning\n\n**Datos de entrada:**\n- emailSubject: Asunto del email\n- emailBody: Cuerpo del mensaje\n- sender: Direcci√≥n del remitente (opcional)\n\n**Ejemplos de clasificaci√≥n:**\n- **Recibo**: Confirmaciones de compra, facturas\n- **Spam**: Emails sospechosos, phishing\n- **Transferencia**: Notificaciones bancarias\n- **Suscripci√≥n**: Renovaciones, membres√≠as\n\n**Respuesta esperada:**\n- success: true\n- model: Modelo utilizado\n- classification: Categor√≠a asignada\n- confidence: Nivel de confianza\n- reasoning: Justificaci√≥n de la clasificaci√≥n"
          },
          "response": []
        },
        {
          "name": "Classify Email - Fine-tuned Model",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"emailSubject\": \"URGENT: Verify your account now!\",\n  \"emailBody\": \"Your account has been compromised. Click here immediately to verify: http://suspicious-link.com. Act fast!\",\n  \"sender\": \"security@fake-bank.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}:{{port}}/fine-tuning/classify-fine-tuned",
              "host": [
                "{{baseUrl}}"
              ],
              "port": "{{port}}",
              "path": [
                "fine-tuning",
                "classify-fine-tuned"
              ]
            },
            "description": "üéØ **Clasificaci√≥n - Modelo Fine-tuned**\n\n**Prop√≥sito:** Clasificar email usando modelo fine-tuned (educativo - mismo que base).\n\n**Rama:** 3-fine-tuning\n\n**Datos de entrada:**\n- emailSubject: Asunto del email\n- emailBody: Cuerpo del mensaje  \n- sender: Direcci√≥n del remitente\n\n**Casos de prueba ideales:**\n- **Spam/Phishing**: URLs sospechosas, urgencia falsa\n- **Transferencias**: Notificaciones bancarias leg√≠timas\n- **Recibos**: Confirmaciones de compra\n- **Estados de cuenta**: Res√∫menes financieros\n\n**Respuesta esperada:**\n- Misma estructura que base model\n- En producci√≥n: Diferentes resultados vs modelo base\n- Para educaci√≥n: Demuestra concepto de fine-tuning"
          },
          "response": []
        },
        {
          "name": "Compare Models",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"emailSubject\": \"Monthly Statement - Chase Bank\",\n  \"emailBody\": \"Your monthly statement is ready. Account ending in 7890. Total balance: $2,847.50. Download your statement from our secure portal.\",\n  \"sender\": \"statements@chase.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}:{{port}}/fine-tuning/compare",
              "host": [
                "{{baseUrl}}"
              ],
              "port": "{{port}}",
              "path": [
                "fine-tuning",
                "compare"
              ]
            },
            "description": "‚öñÔ∏è **Comparaci√≥n de Modelos**\n\n**Prop√≥sito:** Comparar resultados entre modelo base y fine-tuned.\n\n**Rama:** 3-fine-tuning\n\n**Datos de entrada:**\n- Email completo para clasificaci√≥n\n- Mismo formato que endpoints individuales\n\n**Casos ideales para comparaci√≥n:**\n- **Estados de cuenta**: Documentos financieros oficiales\n- **Transferencias**: Notificaciones bancarias\n- **Spam sofisticado**: Phishing que imita bancos\n- **Recibos complejos**: M√∫ltiples art√≠culos, impuestos\n\n**Respuesta esperada:**\n- Input original\n- Clasificaci√≥n del modelo\n- Nota educativa sobre fine-tuning\n- En producci√≥n: Comparaci√≥n lado a lado\n\n**Uso:** Demostrar diferencias entre modelos base y entrenados."
          },
          "response": []
        },
        {
          "name": "Fine-tuning Statistics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}:{{port}}/fine-tuning/stats",
              "host": [
                "{{baseUrl}}"
              ],
              "port": "{{port}}",
              "path": [
                "fine-tuning",
                "stats"
              ]
            },
            "description": "üìà **Estad√≠sticas de Fine-tuning**\n\n**Prop√≥sito:** Obtener estad√≠sticas educativas sobre el proceso de fine-tuning.\n\n**Rama:** 3-fine-tuning\n\n**Datos de entrada:** Ninguno (GET request)\n\n**Respuesta esperada:**\n- Estad√≠sticas del modelo actual\n- Informaci√≥n sobre disponibilidad de modelos\n- Nota educativa sobre fine-tuning\n- M√©tricas simuladas para aprendizaje\n\n**Informaci√≥n incluye:**\n- Modelo actual en uso\n- Conceptos de fine-tuning\n- Diferencias te√≥ricas entre modelos\n- Consideraciones de producci√≥n\n\n**Uso:** Entender el estado del sistema de clasificaci√≥n."
          },
          "response": []
        },
        {
          "name": "Download Training Dataset",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}:{{port}}/fine-tuning/dataset",
              "host": [
                "{{baseUrl}}"
              ],
              "port": "{{port}}",
              "path": [
                "fine-tuning",
                "dataset"
              ]
            },
            "description": "üì• **Descargar Dataset de Entrenamiento**\n\n**Prop√≥sito:** Descargar archivo JSONL con datos de entrenamiento para fine-tuning.\n\n**Rama:** 3-fine-tuning\n\n**Datos de entrada:** Ninguno (GET request)\n\n**Respuesta esperada:**\n- **Archivo JSONL** para descarga\n- Content-Type: application/json\n- Content-Disposition: attachment\n- Nombre: email-classification-training.jsonl\n\n**Contenido del archivo:**\n- Ejemplos de entrenamiento en formato OpenAI\n- Diferentes categor√≠as de emails\n- Prompts y completions estructurados\n- Formato listo para fine-tuning API\n\n**Uso:**\n- Entender estructura de datos de entrenamiento\n- Base para crear datasets personalizados\n- Referencia para fine-tuning real"
          },
          "response": []
        }
      ]
    },
    {
      "name": "üìß Rama 4: Email Processing",
      "description": "Endpoints Email Processing - Pipeline completo de procesamiento de emails",
      "item": [
        {
          "name": "Process Single Email",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"subject\": \"Wire Transfer Confirmation\",\n  \"body\": \"Wire transfer completed successfully. Amount: $5,500.00 sent to John Smith at Wells Fargo. Reference: WT-789456. Fee: $25.00. Date: March 22, 2024.\",\n  \"from\": \"transfers@bankofamerica.com\",\n  \"date\": \"2024-03-22T14:30:00Z\",\n  \"userId\": \"demo-user\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}:{{port}}/email/process",
              "host": [
                "{{baseUrl}}"
              ],
              "port": "{{port}}",
              "path": [
                "email",
                "process"
              ]
            },
            "description": "üìß **Procesar Email Individual**\n\n**Prop√≥sito:** Procesar un email completo a trav√©s del pipeline: clasificaci√≥n + extracci√≥n + guardado.\n\n**Rama:** 4-email-processor\n\n**Datos de entrada:**\n- subject: Asunto del email\n- body: Cuerpo del mensaje\n- from: Remitente (requerido)\n- date: Fecha de recepci√≥n (opcional)\n- userId: ID del usuario (opcional, default: 'demo-user')\n\n**Casos de prueba:**\n- **Transferencias**: Notificaciones bancarias\n- **Recibos**: Confirmaciones de compra\n- **Facturas**: Documentos de pago\n- **Suscripciones**: Renovaciones de servicios\n\n**Pipeline completo:**\n1. Clasificaci√≥n con LM Service\n2. Extracci√≥n de datos relevantes\n3. Llamada a Function Calling (save_email)\n4. Almacenamiento de resultado\n\n**Respuesta esperada:**\n- success: true/false\n- processed: true si fue procesado\n- classification: Categor√≠a asignada\n- confidence: Nivel de confianza\n- extractedData: Datos extra√≠dos\n- toolCalls: Funciones llamadas\n- saved: Estado de guardado"
          },
          "response": []
        },
        {
          "name": "Simulate Multiple Emails",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"count\": 5,\n  \"userId\": \"demo-user\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}:{{port}}/email/simulate",
              "host": [
                "{{baseUrl}}"
              ],
              "port": "{{port}}",
              "path": [
                "email",
                "simulate"
              ]
            },
            "description": "üé≤ **Simular M√∫ltiples Emails**\n\n**Prop√≥sito:** Generar y procesar m√∫ltiples emails simulados para probar el pipeline.\n\n**Rama:** 4-email-processor\n\n**Datos de entrada:**\n- count: N√∫mero de emails a simular (1-20)\n- userId: ID del usuario (opcional)\n\n**Proceso de simulaci√≥n:**\n1. Genera emails aleatorios de diferentes tipos\n2. Los procesa a trav√©s del pipeline completo\n3. Devuelve estad√≠sticas de procesamiento\n\n**Tipos de emails simulados:**\n- Recibos de compra (Amazon, tiendas)\n- Notificaciones bancarias (transferencias)\n- Suscripciones (Netflix, servicios)\n- Facturas (servicios, utilidades)\n- Promociones (ofertas, descuentos)\n\n**Respuesta esperada:**\n- simulation.requested: Emails solicitados\n- simulation.processed: Emails procesados exitosamente\n- results.processedEmails: Lista de resultados\n- results.stats: Estad√≠sticas de procesamiento\n\n**Uso:** Probar el sistema con volumen de datos realista."
          },
          "response": []
        },
        {
          "name": "Get Processed Email by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}:{{port}}/email/processed/email_1234567890",
              "host": [
                "{{baseUrl}}"
              ],
              "port": "{{port}}",
              "path": [
                "email",
                "processed",
                "email_1234567890"
              ]
            },
            "description": "üîç **Obtener Email Procesado por ID**\n\n**Prop√≥sito:** Recuperar un email espec√≠fico que ya fue procesado.\n\n**Rama:** 4-email-processor\n\n**Datos de entrada:**\n- ID del email en la URL (path parameter)\n\n**Formato de ID:**\n- T√≠picamente: `email_<timestamp>`\n- Ejemplo: `email_1234567890`\n- Se obtiene de respuestas previas de procesamiento\n\n**Respuesta esperada:**\n- success: true si se encuentra\n- email: Objeto completo del email procesado\n  * Datos originales\n  * Clasificaci√≥n\n  * Datos extra√≠dos\n  * Metadata de procesamiento\n- Error 404 si no se encuentra\n\n**Uso:** Consultar resultados espec√≠ficos de procesamiento anterior."
          },
          "response": []
        },
        {
          "name": "Get All Processed Emails",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}:{{port}}/email/processed",
              "host": [
                "{{baseUrl}}"
              ],
              "port": "{{port}}",
              "path": [
                "email",
                "processed"
              ]
            },
            "description": "üìã **Obtener Todos los Emails Procesados**\n\n**Prop√≥sito:** Listar todos los emails que han sido procesados por el sistema.\n\n**Rama:** 4-email-processor\n\n**Datos de entrada:** Ninguno (GET request)\n\n**Respuesta esperada:**\n- success: true\n- total: N√∫mero total de emails procesados\n- emails: Array con todos los emails\n  * ID √∫nico\n  * Datos originales (subject, body, from)\n  * Clasificaci√≥n asignada\n  * Datos extra√≠dos\n  * Timestamp de procesamiento\n  * Estado de guardado\n\n**Informaci√≥n √∫til:**\n- Historial completo de procesamiento\n- Diferentes tipos de clasificaciones\n- Patrones en los datos extra√≠dos\n- Rendimiento del sistema\n\n**Uso:** An√°lisis y auditor√≠a de emails procesados."
          },
          "response": []
        },
        {
          "name": "Get Processing Statistics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}:{{port}}/email/stats",
              "host": [
                "{{baseUrl}}"
              ],
              "port": "{{port}}",
              "path": [
                "email",
                "stats"
              ]
            },
            "description": "üìä **Estad√≠sticas de Procesamiento**\n\n**Prop√≥sito:** Obtener m√©tricas y estad√≠sticas del sistema de procesamiento.\n\n**Rama:** 4-email-processor\n\n**Datos de entrada:** Ninguno (GET request)\n\n**Respuesta esperada:**\n- success: true\n- processingStats: Objeto con estad√≠sticas\n  * N√∫mero total de emails procesados\n  * Distribuci√≥n por categor√≠as\n  * Tiempo promedio de procesamiento\n  * Tasa de √©xito/fallo\n  * Emails por usuario\n  * Tipos m√°s comunes\n\n**M√©tricas incluidas:**\n- **Volume**: Total procesado por per√≠odo\n- **Categories**: Distribuci√≥n de clasificaciones\n- **Performance**: Tiempos y eficiencia\n- **Users**: Estad√≠sticas por usuario\n- **Success Rate**: Tasa de procesamiento exitoso\n\n**Uso:** Monitoreo y optimizaci√≥n del sistema."
          },
          "response": []
        }
      ]
    },
    {
      "name": "üîß Rama 5: Enhanced RAG",
      "description": "Endpoints Enhanced RAG - RAG mejorado con Function Calling y b√∫squeda inteligente",
      "item": [
        {
          "name": "Enhanced RAG Query",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"¬øCu√°nto gast√© en Amazon durante marzo?\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}:{{port}}/rag/query",
              "host": [
                "{{baseUrl}}"
              ],
              "port": "{{port}}",
              "path": [
                "rag",
                "query"
              ]
            },
            "description": "üß† **Enhanced RAG con Function Calling**\n\n**Prop√≥sito:** RAG mejorado con routing inteligente entre b√∫squeda vectorial y estructurada.\n\n**Rama:** 5-enhanced-rag (fetch-emails)\n\n**Datos de entrada:**\n- query: Consulta en lenguaje natural\n\n**Funcionalidades mejoradas:**\n- **Routing inteligente**: Vector vs b√∫squeda estructurada\n- **Function Calling**: search_emails_by_sender, search_emails_by_amount, etc.\n- **Contexto mejorado**: Mejor comprensi√≥n de queries\n- **Respuestas precisas**: Datos espec√≠ficos vs informaci√≥n general\n\n**Ejemplos optimizados:**\n- \"¬øCu√°nto gast√© en Amazon?\"\n- \"Emails de netflix@netflix.com\"\n- \"Compras superiores a $100\"\n- \"¬øQu√© emails recib√≠ ayer?\"\n\n**Respuesta esperada:**\n- Routing decision (vector vs structured)\n- Function calls ejecutadas\n- Resultados precisos con datos espec√≠ficos\n- Metadata de procesamiento mejorada"
          },
          "response": []
        },
        {
          "name": "Search Emails by Sender",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"Mostrame todos los emails de billing@netflix.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}:{{port}}/rag/query",
              "host": [
                "{{baseUrl}}"
              ],
              "port": "{{port}}",
              "path": [
                "rag",
                "query"
              ]
            },
            "description": "üë§ **B√∫squeda por Remitente**\n\n**Prop√≥sito:** Usar Function Calling para buscar emails de remitente espec√≠fico.\n\n**Rama:** 5-enhanced-rag\n\n**Datos de entrada:**\n- Query mencionando remitente espec√≠fico\n\n**Function Calling esperado:**\n- search_emails_by_sender(sender: \"billing@netflix.com\")\n- B√∫squeda estructurada en lugar de vectorial\n\n**Casos de prueba:**\n- \"billing@netflix.com\" ‚Üí Suscripciones Netflix\n- \"no-reply@amazon.com\" ‚Üí Compras Amazon\n- \"service@walmart.com\" ‚Üí Compras Walmart\n- \"notifications@uber.com\" ‚Üí Servicios Uber\n\n**Respuesta esperada:**\n- Lista espec√≠fica de emails del remitente\n- Metadata de cada email\n- Routing decision hacia structured search"
          },
          "response": []
        },
        {
          "name": "Search Emails by Amount",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"¬øQu√© compras hice por m√°s de $100?\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}:{{port}}/rag/query",
              "host": [
                "{{baseUrl}}"
              ],
              "port": "{{port}}",
              "path": [
                "rag",
                "query"
              ]
            },
            "description": "üí∞ **B√∫squeda por Monto**\n\n**Prop√≥sito:** Function Calling para filtrar emails por rango de montos.\n\n**Rama:** 5-enhanced-rag\n\n**Datos de entrada:**\n- Query mencionando montos o rangos espec√≠ficos\n\n**Function Calling esperado:**\n- search_emails_by_amount(min_amount: 100)\n- search_emails_by_amount(max_amount: 50)\n- search_emails_by_amount(min_amount: 100, max_amount: 500)\n\n**Casos de prueba:**\n- \"m√°s de $100\" ‚Üí emails con montos > $100\n- \"menos de $50\" ‚Üí emails con montos < $50\n- \"entre $50 y $200\" ‚Üí emails en rango espec√≠fico\n- \"exactamente $129.99\" ‚Üí monto espec√≠fico\n\n**Respuesta esperada:**\n- Emails filtrados por criterio de monto\n- Montos destacados en la respuesta\n- Suma total de gastos si aplica"
          },
          "response": []
        },
        {
          "name": "Get Email Database List",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}:{{port}}/rag/emails",
              "host": [
                "{{baseUrl}}"
              ],
              "port": "{{port}}",
              "path": [
                "rag",
                "emails"
              ]
            },
            "description": "üìß **Lista de Emails en Base de Datos**\n\n**Prop√≥sito:** Listar todos los emails disponibles en la base de datos.\n\n**Rama:** 5-enhanced-rag (endpoint actualizado de /policies)\n\n**Datos de entrada:** Ninguno (GET request)\n\n**Base de datos incluye:**\n- **Walmart**: $87.34 - Groceries\n- **Amazon**: $129.99 - Electronics\n- **Netflix**: $15.99 - Subscription\n- **Starbucks**: $12.45 - Coffee\n- **Uber**: $23.67 - Transportation\n- **Best Buy**: $299.00 - Electronics\n- **Target**: $45.78 - Household items\n- **Apple**: $0.99 - App purchase\n\n**Respuesta esperada:**\n- Lista completa de 8 emails\n- ID, subject, amount, sender por email\n- Metadata de embeddings\n- Categorizaci√≥n por tipo\n\n**Uso:** Explorar datos disponibles para testing."
          },
          "response": []
        }
      ]
    },
    {
      "name": "üõ°Ô∏è Rama 6: API Moderation",
      "description": "Endpoints Moderation - Filtrado de contenido y evaluaci√≥n de seguridad",
      "item": [
        {
          "name": "Moderate Text Content",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"text\": \"I want to check my account balance and recent transactions for any unauthorized charges.\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}:{{port}}/api/moderation/text",
              "host": [
                "{{baseUrl}}"
              ],
              "port": "{{port}}",
              "path": [
                "api",
                "moderation",
                "text"
              ]
            },
            "description": "üõ°Ô∏è **Moderaci√≥n de Texto**\n\n**Prop√≥sito:** Evaluar contenido de texto usando OpenAI Moderation API.\n\n**Rama:** 6-api-moderation\n\n**Datos de entrada:**\n- text: Contenido a moderar (string)\n\n**Casos de prueba:**\n- **Contenido seguro**: Consultas financieras normales\n- **Contenido problem√°tico**: Lenguaje ofensivo, amenazas\n- **Contenido l√≠mite**: Frustraci√≥n expresada apropiadamente\n\n**Categor√≠as evaluadas:**\n- harassment: Acoso o hostigamiento\n- hate: Contenido discriminatorio\n- self-harm: Autolesiones\n- sexual: Contenido sexual\n- violence: Violencia\n- harassment/threatening: Acoso con amenazas\n\n**Respuesta esperada:**\n- moderation: Resultado completo de OpenAI\n- analysis: An√°lisis interpretado\n  * risk_level: low/medium/high\n  * flagged: true/false\n  * highest_scores: Categor√≠as m√°s problem√°ticas\n- input_length: Longitud del texto"
          },
          "response": []
        },
        {
          "name": "Moderate Email Content",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"subject\": \"Monthly Statement Available\",\n  \"body\": \"Your monthly statement is now available. Please log into your secure account to view your transactions and balance information.\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}:{{port}}/api/moderation/email",
              "host": [
                "{{baseUrl}}"
              ],
              "port": "{{port}}",
              "path": [
                "api",
                "moderation",
                "email"
              ]
            },
            "description": "üìß **Moderaci√≥n de Email**\n\n**Prop√≥sito:** Moderar tanto asunto como cuerpo del email por separado.\n\n**Rama:** 6-api-moderation\n\n**Datos de entrada:**\n- subject: Asunto del email (requerido)\n- body: Cuerpo del email (requerido)\n\n**Casos de prueba:**\n- **Email leg√≠timo**: Notificaciones bancarias oficiales\n- **Phishing**: Asuntos urgentes, cuerpos con links sospechosos\n- **Spam**: Ofertas excesivas, lenguaje promocional agresivo\n- **Contenido problem√°tico**: Lenguaje inapropiado en comunicaciones\n\n**Evaluaci√≥n separada:**\n- Subject moderation: An√°lisis del asunto\n- Body moderation: An√°lisis del cuerpo\n- Overall assessment: Evaluaci√≥n general\n\n**Respuesta esperada:**\n- email_safe: Evaluaci√≥n general (true/false)\n- subject: Moderaci√≥n y an√°lisis del asunto\n- body: Moderaci√≥n y an√°lisis del cuerpo\n- overall: Recomendaci√≥n final y nivel de riesgo"
          },
          "response": []
        },
        {
          "name": "Batch Text Moderation",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"texts\": [\n    \"I need to transfer money to my savings account.\",\n    \"This service is terrible and I hate dealing with your company.\",\n    \"Can you help me understand my recent charges?\",\n    \"URGENT: Click here now or your account will be closed!\",\n    \"Thank you for your excellent customer service.\"\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}:{{port}}/api/moderation/batch",
              "host": [
                "{{baseUrl}}"
              ],
              "port": "{{port}}",
              "path": [
                "api",
                "moderation",
                "batch"
              ]
            },
            "description": "üì¶ **Moderaci√≥n por Lotes**\n\n**Prop√≥sito:** Moderar m√∫ltiples textos en una sola solicitud.\n\n**Rama:** 6-api-moderation\n\n**Datos de entrada:**\n- texts: Array de strings (m√°ximo 10)\n\n**Validaciones:**\n- Array requerido\n- M√≠nimo 1 texto\n- M√°ximo 10 textos\n- Todos deben ser strings\n\n**Casos de prueba variados:**\n- Mezcla de contenido seguro y problem√°tico\n- Diferentes niveles de riesgo\n- Varios tipos de comunicaci√≥n financiera\n\n**Respuesta esperada:**\n- results: Array con moderaci√≥n individual\n- summary: Estad√≠sticas agregadas\n  * total: N√∫mero de textos\n  * flagged: Textos marcados\n  * clean: Textos seguros\n  * Distribuci√≥n por nivel de riesgo\n\n**Uso:** Procesamiento eficiente de m√∫ltiples contenidos."
          },
          "response": []
        },
        {
          "name": "Moderation Demo",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"include_risky\": false\n}"
            },
            "url": {
              "raw": "{{baseUrl}}:{{port}}/api/moderation/demo",
              "host": [
                "{{baseUrl}}"
              ],
              "port": "{{port}}",
              "path": [
                "api",
                "moderation",
                "demo"
              ]
            },
            "description": "üé≠ **Demo de Moderaci√≥n**\n\n**Prop√≥sito:** Demostrar el sistema de moderaci√≥n con ejemplos predefinidos.\n\n**Rama:** 6-api-moderation\n\n**Datos de entrada:**\n- include_risky: Incluir ejemplos de contenido problem√°tico (opcional, default: false)\n\n**Ejemplos seguros incluidos:**\n- Newsletter welcome message\n- Account suspension warning\n- Purchase confirmation\n- Promotional offer\n- Feedback acknowledgment\n\n**Ejemplos problem√°ticos (include_risky: true):**\n- Contenido de autolesi√≥n (educativo)\n- Cr√≠ticas agresivas (l√≠mite)\n- Otros casos l√≠mite para aprendizaje\n\n**Respuesta esperada:**\n- demo_results: Array con texto, moderaci√≥n y an√°lisis\n- summary: Estad√≠sticas generales\n- educational_note: Nota sobre el prop√≥sito educativo\n\n**Uso:** Entender el comportamiento de la Moderation API con ejemplos reales."
          },
          "response": []
        },
        {
          "name": "Get Moderation Categories",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}:{{port}}/api/moderation/categories",
              "host": [
                "{{baseUrl}}"
              ],
              "port": "{{port}}",
              "path": [
                "api",
                "moderation",
                "categories"
              ]
            },
            "description": "üìö **Categor√≠as de Moderaci√≥n**\n\n**Prop√≥sito:** Obtener informaci√≥n detallada sobre todas las categor√≠as de moderaci√≥n.\n\n**Rama:** 6-api-moderation\n\n**Datos de entrada:** Ninguno (GET request)\n\n**Categor√≠as incluidas:**\n- **harassment**: Lenguaje de acoso\n- **harassment/threatening**: Acoso con amenazas\n- **hate**: Contenido discriminatorio\n- **hate/threatening**: Odio con violencia\n- **self-harm**: Autolesiones\n- **self-harm/intent**: Intenci√≥n de autolesi√≥n\n- **self-harm/instructions**: Instrucciones de autolesi√≥n\n- **sexual**: Contenido sexual\n- **sexual/minors**: Contenido sexual con menores\n- **violence**: Violencia\n- **violence/graphic**: Violencia gr√°fica\n\n**Informaci√≥n adicional:**\n- Descripci√≥n detallada de cada categor√≠a\n- Notas de uso\n- Rangos de puntuaci√≥n (0.0 - 1.0)\n- Criterios de flagging\n\n**Uso:** Referencia para interpretar resultados de moderaci√≥n."
          },
          "response": []
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost",
      "description": "Base URL del servidor"
    },
    {
      "key": "port",
      "value": "3000",
      "description": "Puerto del servidor (configurable en .env)"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Pre-request script para logging",
          "console.log('üöÄ Ejecutando request:', pm.info.requestName);",
          "console.log('üìç URL:', pm.request.url.toString());",
          "",
          "// Verificar variables de entorno",
          "if (!pm.environment.get('baseUrl')) {",
          "    pm.environment.set('baseUrl', 'http://localhost');",
          "}",
          "if (!pm.environment.get('port')) {",
          "    pm.environment.set('port', '3000');",
          "}"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Tests globales para validaci√≥n b√°sica",
          "pm.test('Status code is 200 or 201', function () {",
          "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
          "});",
          "",
          "pm.test('Response time is less than 30 seconds', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(30000);",
          "});",
          "",
          "pm.test('Response is JSON', function () {",
          "    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
          "});",
          "",
          "// Log de respuesta para debugging",
          "if (pm.response.code >= 400) {",
          "    console.log('‚ùå Error response:', pm.response.text());",
          "} else {",
          "    console.log('‚úÖ Success response received');",
          "}"
        ]
      }
    }
  ]
}